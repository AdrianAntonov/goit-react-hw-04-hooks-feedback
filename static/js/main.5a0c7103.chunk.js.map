{"version":3,"sources":["components/Section/Section.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions .js","components/Notification/Notification.js","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Section","title","children","Statistics","props","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","onLeaveFeedback","map","item","className","styles","button","onClick","name","id","Notification","message","App","useState","setGood","setNeutral","setBad","toFixed","countPositiveFeedbackPercentage","buttons","arg","alert","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"6MAgBeA,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,gCACE,6BAAKD,IACJC,MCkBQC,MAtBf,SAAoBC,GAClB,IAAQC,EAAkDD,EAAlDC,KAAMC,EAA4CF,EAA5CE,QAASC,EAAmCH,EAAnCG,IAAKC,EAA8BJ,EAA9BI,MAAOC,EAAuBL,EAAvBK,mBAEnC,OACE,gCACE,oDACA,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,GAA0C,EAAjE,W,gBCYSC,MArBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OACE,8BACGD,EAAQE,KAAI,SAAAC,GAAI,OACf,wBACEC,UAAWC,IAAOC,OAElBC,QAAS,kBAAMN,EAAgBE,EAAKK,OAHtC,SAKGL,EAAKK,MAHDL,EAAKM,UCILC,MAXf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OACE,8BACE,6BAAKA,OCyDIC,MAvDf,WACE,MAAwBC,mBAAS,GAAjC,mBAAOnB,EAAP,KAAaoB,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOlB,EAAP,KAAgBoB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOjB,EAAP,KAAYoB,EAAZ,KAqBMnB,EAFGH,EAAOC,EAAUC,EASpBE,EALkC,WACtC,GAAIJ,EAAO,EACT,OAASA,EAAOG,EAAS,KAAKoB,QAAQ,GAGfC,GAE3B,OACE,gCACE,cAAC,EAAD,CAAS5B,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBU,QAASmB,EAASlB,gBA/B3B,SAAAmB,GACZ,OAAQA,GACN,IAAK,OACHN,EAAQpB,EAAO,GACf,MACF,IAAK,MACHsB,EAAOpB,EAAM,GACb,MACF,IAAK,UACHmB,EAAWpB,EAAU,GACrB,MACF,QACE0B,MAAM,eAqBR,cAAC,EAAD,CAAS/B,MAAM,aAAf,SACGO,EACC,cAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,IAGtB,cAAC,EAAD,CAAca,QAAQ,4BCnDhCW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kICP1BC,EAAOC,QAAU,CAAC,OAAS,mC","file":"static/js/main.5a0c7103.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nfunction Section({ title, children }) {\n  return (\n    <div>\n      <h2>{title}</h2>\n      {children}\n    </div>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\n\nfunction Statistics(props) {\n  const { good, neutral, bad, total, positivePercentage } = props;\n\n  return (\n    <div>\n      <h4>Statistics content</h4>\n      <p>Good: {good}</p>\n      <p>Neutral: {neutral}</p>\n      <p>Bad: {bad}</p>\n      <p>Total: {total}</p>\n      <p>Positive feedback: {positivePercentage ? positivePercentage : 0}%</p>\n    </div>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  positivePercentage: PropTypes.string,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport styles from './FeedbackOptions.module.css';\n\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <div>\n      {options.map(item => (\n        <button\n          className={styles.button}\n          key={item.id}\n          onClick={() => onLeaveFeedback(item.name)}\n        >\n          {item.name}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.array,\n  onLeaveFeedback: PropTypes.func,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\n\nfunction Notification({ message }) {\n  return (\n    <div>\n      <h3>{message}</h3>\n    </div>\n  );\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\nexport default Notification;\n","import { useState } from 'react';\nimport buttons from './utils/buttons.json';\nimport Section from './components/Section';\nimport Statistics from './components/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Notification from './components/Notification';\n\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const count = arg => {\n    switch (arg) {\n      case 'good':\n        setGood(good + 1);\n        break;\n      case 'bad':\n        setBad(bad + 1);\n        break;\n      case 'neutral':\n        setNeutral(neutral + 1);\n        break;\n      default:\n        alert('hello');\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n  const total = countTotalFeedback();\n\n  const countPositiveFeedbackPercentage = () => {\n    if (good > 0) {\n      return ((good / total) * 100).toFixed(1);\n    }\n  };\n  const positivePercentage = countPositiveFeedbackPercentage();\n\n  return (\n    <div>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions options={buttons} onLeaveFeedback={count} />\n      </Section>\n      <Section title=\"Statistics\">\n        {total ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercentage={positivePercentage}\n          />\n        ) : (\n          <Notification message=\"No feedback given\"></Notification>\n        )}\n      </Section>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__1tqdj\"};"],"sourceRoot":""}